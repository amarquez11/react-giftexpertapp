{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGVC,mBAAS,IAHC,mBAGvCC,EAHuC,KAG3BC,EAH2B,KAiB9C,OAEI,sBAAMC,SAXU,SAACC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCLdG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEDI,MAAMF,GAFL,cAEbG,EAFa,gBAGCA,EAAKC,OAHN,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAI1Ca,QAAQC,IAAIR,GAbO,kBAcZA,GAdY,4CAAH,sDCDXS,EAAc,SAAC,GAAuB,EAArBN,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKgB,UAAU,2DAAf,UACI,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,8BAAKA,EAAL,WCHCS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECAZ,SAAEA,GAAa,IAAD,EAEXd,mBAAS,CAC/BqB,KAAK,GACLe,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAsBrC,OAfAC,qBAAW,WAER1B,EAASC,GACR0B,MAAK,SAAAC,GAEDH,EAAS,CACLjB,KAAKoB,EACLL,SAAQ,SAKlB,CAACtB,IAGIuB,EDnByBK,CAAc5B,GAAjCa,EAHsB,EAG3BN,KAAae,EAHc,EAGdA,QAIrB,OACI,qCACI,oBAAIJ,UAAU,sDAAd,SAAsElB,IACpEsB,GAAW,wCAEb,qBAAKJ,UAAU,YAAf,SAEYL,EAAOJ,KAAM,SAAAC,GAAG,OACZ,cAAC,EAAD,eAESA,GADCA,EAAIC,aEZ7BkB,EAAe,WAAM,MAIE3C,mBAAS,CAAC,cAJZ,mBAI3B4C,EAJ2B,KAIf7C,EAJe,KAe9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ6C,EAAWrB,KAAK,SAACT,GAAD,OACZ,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MC3BlC+B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4eff45eb.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { PropTypes } from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n\n    \n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = (e) => {        \n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit= (e) =>{\n        e.preventDefault();\n\n        if( inputValue.trim().length>2) {\n            setCategories( cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        \n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={ inputValue}\n                onChange= { handleInputChange }\n            />\n        </form>\n        \n    )\n}\n\n\nAddCategory.propTypes={\n    setCategories: PropTypes.func.isRequired\n}","\n\n\n    export const getGifs = async ( category ) => {\n        const url= `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=zw87CYiVrXTOWbgOmliilmqzCgd6HAtB`\n        const resp= await fetch(url);\n        const {data}= await resp.json();\n        \n        const gifs = data.map( img => {\n            return{\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        })\n\n        console.log(gifs);\n        return gifs;\n    }","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n\n    return (\n        <div className=\"card animate__animated animate__bounce animate__delay-2s\">\n            <img src={ url } alt={ title }/>\n            <p>{ title } </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n import { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    \n    const { data:images, loading }= useFetchGifs( category );\n\n    // getGifs();\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__bounce animate__delay-2s\">{ category }</h3>\n            { loading && <p>Loading</p> }\n            \n            <div className=\"card-grid\">                    \n                    {\n                        images.map(  img => (\n                            <GifGridItem \n                                key={ img.id }\n                                { ...img }\n                            />\n                        ))\n                    }                    \n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs= ( category )=>{\n\n    const [state, setState] = useState({\n        data:[],\n        loading: true\n    });\n    \n    useEffect( ()=>{\n\n       getGifs( category )\n       .then(imgs =>{\n           \n            setState({\n                data:imgs,\n                loading:false\n            });\n           \n       })\n\n    },[category] )\n\n\n    return state;\n\n};","\n\nimport React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\n\nexport const GifExpertApp = () => {\n\n    // const categorias = ['One Punch', 'Samurai X', 'Dragon Ball'];\n\nconst [categories, setCategories] = useState(['One Punch']);  \n\n// const handleAdd = () =>{\n\n//     setCategories([...categories, 'HunterXHunter'] );\n//     //setCategories( cats => [...cats, 'HunterXHunter']);\n\n// }\n\n\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr/>\n\n            <ol>\n                { \n                    categories.map( (category) => (\n                        <GifGrid \n                            key={ category }\n                            category={ category }\n                        />\n                    ))\n                }\n            </ol>\n            \n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}